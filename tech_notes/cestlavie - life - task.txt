# CestLaVie - Life - Task 技术文档

## 项目概述
CestLaVie Life Task 是一个完整的任务管理和时间跟踪系统，集成 Notion 数据库、智能邮件提醒和时间管理功能。

## 最新更新（2025-07-25）

### 重大重构：邮件提醒系统
**问题背景：** 原有的按任务时间发送个人提醒的邮件系统存在复杂的时区计算问题，导致邮件发送失败。

**解决方案：** 完全重新设计为固定时间的每日汇总邮件系统。

### 新邮件系统架构

#### 1. 四个固定时间邮件类型
- **早上 8:00** - 今日任务概览 + 激励信息
- **中午 12:00** - 上午完成情况 + 下午任务
- **晚上 6:00** - 全天总结 + 完成率统计
- **晚上 11:00** - 明日任务预览

#### 2. 核心文件更新

**API 路由** (`/src/app/api/task-reminder/route.ts`)
```typescript
// 主要功能函数
- getTasksForDate(targetDate: string): 获取指定日期任务
- getCompletedTasksForDate(targetDate: string): 获取完成任务
- determineEmailType(): 根据当前时间确定邮件类型
- getDateStrings(): 获取多伦多时区的今日/明日日期

// 邮件类型判断逻辑
- 7-10点: morning 
- 11-14点: midday
- 17-20点: evening 
- 22点-次日2点: night
```

**EmailService** (`/src/utils/emailService.ts`)
```typescript
// 新增四个邮件方法
- sendMorningOverview(tasks, date): 早晨概览邮件
- sendMiddayCheck(activeTasks, completedTasks, date): 中程检查邮件
- sendEveningSummary(allTasks, completedTasks, date): 晚间总结邮件
- sendTomorrowPreview(tomorrowTasks, date): 明日预览邮件

// 新增邮件模板生成器
- generateMiddayEmail(): 中午检查邮件模板
- generateTomorrowPreviewEmail(): 明日预览邮件模板
```

**GitHub Actions** (`.github/workflows/email-reminder.yml`)
```yaml
# 更新为四个精确时间的 cron 任务
- cron: '0 12 * * *'  # 8:00 AM Toronto (12:00 UTC)
- cron: '0 16 * * *'  # 12:00 PM Toronto (16:00 UTC)  
- cron: '0 22 * * *'  # 6:00 PM Toronto (22:00 UTC)
- cron: '0 3 * * *'   # 11:00 PM Toronto (3:00 UTC next day)
```

#### 3. 邮件模板设计

**早晨邮件特色：**
- 当日任务完整列表
- 任务时间安排显示
- 优先级图标标识
- 激励性结语

**中午邮件特色：**
- 上午完成情况统计
- 下午任务重点提醒
- 进度鼓励信息

**晚间邮件特色：**
- 全天完成率计算
- 未完成任务提醒
- 基于完成率的个性化评价

**夜间邮件特色：**
- 明日任务预览
- 任务数量统计
- 休息提醒

### 技术亮点

#### 1. 时区处理优化
```typescript
// 使用标准化的多伦多时区处理
const torontoTime = new Date(now.toLocaleString("en-US", {timeZone: "America/Toronto"}))
const today = torontoTime.toLocaleDateString("en-CA", {timeZone: "America/Toronto"})
```

#### 2. 邮件类型智能判断
```typescript
function determineEmailType(): 'morning' | 'midday' | 'evening' | 'night' {
  const hour = torontoTime.getHours()
  if (hour >= 7 && hour < 10) return 'morning'
  // ... 其他时间段判断
}
```

#### 3. 任务数据统一接口
```typescript
interface TaskData {
  id: string
  title: string
  status: string
  start_date?: string
  end_date?: string
  priority_quadrant?: string
  plan?: string[]
  note?: string
}
```

### 删除的旧代码功能
- 按任务时间计算的个人提醒逻辑
- 复杂的时区偏移计算
- 单一任务邮件模板
- 每5分钟运行的 GitHub Actions

### 系统集成
- **Notion 数据库**：直接连接用户配置的 Tasks 数据库
- **SMTP 邮件服务**：支持 Gmail 等标准 SMTP 服务器
- **Vercel 部署**：API 路由自动处理时区和调度
- **GitHub Actions**：自动化邮件发送调度

### 后续优化建议

#### 1. 邮件个性化增强
- 根据用户历史完成率调整邮件语调
- 添加任务类型统计（工作/个人/学习）
- 集成天气信息到早晨邮件

#### 2. 数据分析功能
- 每周/月度任务完成趋势
- 时间利用效率分析
- 任务优先级分布统计

#### 3. 交互功能扩展
- 邮件回复直接更新任务状态
- 一键延期任务功能
- 智能任务时间建议

#### 4. 性能优化
- 邮件模板缓存机制
- 批量任务查询优化
- 错误重试机制

### 测试方法
```bash
# 手动触发特定类型邮件测试
curl "https://stanleyhi.com/api/task-reminder?type=morning"
curl "https://stanleyhi.com/api/task-reminder?type=midday" 
curl "https://stanleyhi.com/api/task-reminder?type=evening"
curl "https://stanleyhi.com/api/task-reminder?type=night"

# 测试邮件功能
curl "https://stanleyhi.com/api/task-reminder?test=true"
```

## 核心架构

### 组件结构
```
cestlavie/components/Life/
├── TaskPanel.tsx              # 主任务管理面板
├── TaskFormPanel.tsx          # 任务创建/编辑表单
├── TaskListView.tsx           # 任务列表视图
├── TaskCalendarView.tsx       # 任务日历视图
├── SimpleTaskTimer.tsx        # 任务计时器
├── TaskTimeTracker.tsx        # 时间跟踪组件
├── PlanPanel.tsx              # 计划管理
├── StrategyPanel.tsx          # 策略管理
└── taskReducer.ts             # 任务状态管理
```

### API 端点
```
/api/tasks                     # 任务 CRUD 操作
/api/plan                      # 计划管理
/api/strategy                  # 策略管理
/api/task-reminder             # 新邮件提醒系统
```

### 数据库集成
- **Notion API**：主要数据存储和管理
- **用户配置**：通过 `/api/user-notion-config` 管理
- **时区处理**：统一使用 America/Toronto 时区

### 时间管理功能
- 任务时间冲突检测
- 自动计算预算时间和实际时间
- 任务完成质量评分
- 时间统计和分析

这个重构彻底解决了之前邮件系统的时区问题，提供了更稳定、更用户友好的任务提醒体验。