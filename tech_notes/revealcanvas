26 June 2025
1- 学生不可见，老师可见的notes 


🧩 页面整体结构
页面被划分为两个主要区域：

1. 顶部操作栏（悬浮固定，全宽，位于 NavBar 下方）
使用 CardWrapper 包裹，保持整体圆角、阴影风格与主站一致；

左侧为图片上传区域；

右侧为两个固定宽度按钮：

+ Mask：添加遮罩；

✔ Clear：完成遮罩设置，进入删除模式；

所有按钮使用主站统一紫色调（bg-purple-600 / hover:bg-purple-700），文字白色，按钮宽度统一为 w-28。

2. 主画布区域（页面主体）
顶部设定 padding-top: 128px（即 pt-32），用于避开悬浮操作栏；

图片区域宽度为全屏，左右有 px-6 内边距；

图片按上传顺序倒序排列显示，每张图为一张 Card 卡片包裹（保持统一边框、圆角、阴影）；

图片使用 object-contain 填充卡片宽度；

所有遮罩以 absolute 定位，统一渲染在图片区域之上，不属于图片元素的子节点。

🖼 图片上传逻辑
用户点击 <input type="file" multiple accept="image/*" /> 上传图片；

支持多选上传；

上传成功后立即预览，显示在左侧画布区；

新上传的图片插入列表最前方；

图片未持久化，仅限当前页面生命周期。

🟪 遮罩功能逻辑
添加遮罩（点击 + Mask）
遮罩默认属性固定为：

宽度：500px

高度：300px

颜色：rgba(155, 89, 182, 1.0)（主站风格紫色）

透明度：100（完全不透明）

遮罩添加位置：当前可视窗口的正中间；

添加后自动进入设置状态（不可删除）；

遮罩可拖动、拉伸四边调整尺寸；

每个遮罩为独立对象，具有唯一 id。

完成设置（点击 ✔ Clear）
所有遮罩进入“可删除模式”；

用户点击任一遮罩将其删除（带有缩放淡出动画）；

删除操作更新本地存储。

💾 数据持久化行为
所有遮罩数据以 JSON 格式存入 localStorage，键名为 'revealcanvas-masks'；

页面首次加载时尝试从 localStorage 恢复遮罩数据；

遮罩数据将在以下情况下保留：

刷新页面；

关闭浏览器；

重启设备后再次打开页面；

图片数据不做持久化，仅用于当前会话。







🎯 目标
实现“保存项目”与“加载项目”功能，允许用户将当前图片与遮罩数据打包为一项“项目记录”，并通过唯一 project_id 随时查询并恢复使用。

✅ 功能一：保存项目（Save Project）
触发方式：点击“💾 Save”按钮；

保存内容：

所有图片（使用 base64 编码格式）；

所有遮罩（含 id, top, left, width, height, color, opacity）；

项目名称（用户输入）；

时间戳（自动生成）；

保存格式：

图片存入 project_images 表；

遮罩存入 project_masks 表；

项目元信息（名称 + 时间戳）存入 projects 表；

前置校验：必须至少上传一张图片；

保存结果提示：显示保存成功 + 唯一 project_id。

🔍 功能二：加载项目（Load）
触发方式：用户输入 project_id 并点击“📂 Load Project”按钮；

加载内容：

读取指定项目的图片与遮罩；

一次性恢复并渲染所有图片和对应遮罩；

UI 行为：

清空当前画布；

自动进入“遮罩可删除”模式；

错误处理：若 project_id 无效，提示“未找到该项目”。

🗃️ 数据表结构（Supabase）
1. projects
字段名	类型	描述
id	uuid	主键
name	text	项目名称
created_at	timestamp	创建时间

2. project_images
字段名	类型	描述
id	uuid	主键
project_id	uuid	外键，关联项目
base64	text	图片的 base64 编码

3. project_masks
字段名	类型	描述
id	uuid	主键
project_id	uuid	外键，关联项目
mask_data	jsonb	遮罩完整数据结构


