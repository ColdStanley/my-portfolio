# CestLaVie - Career - JD2CV 智能推荐方案

## 核心目标
减轻用户重复输入工作经验的工作负担，通过智能推荐相关历史经历来快速填充Your Experience字段。

## 技术方案：混合推荐策略 + 关键词匹配

### 1. 混合推荐的三个阶段

#### 阶段1：Capability预推荐
- **匹配逻辑**：`当前capability` vs `数据库中所有capability_X`
- **推荐数量**：3个最相关的历史经历
- **触发时机**：用户选择/生成capability后
- **数据源**：从Notion数据库查询所有记录的capability字段

#### 阶段2：内容动态推荐  
- **匹配逻辑**：`当前输入内容` vs `数据库中所有your_experience_X`
- **推荐数量**：5个最相关的历史经历
- **触发时机**：用户开始输入后（可设置最小字符数阈值，如10个字符）
- **数据源**：从Notion数据库查询所有记录的your_experience字段

#### 阶段3：组合推荐
- **匹配逻辑**：`capability相似度` + `内容相似度` 加权计算
- **权重分配**：capability(30%) + content(70%)
- **最终排序**：综合得分降序
- **应用场景**：用户输入一定内容后的精准推荐

### 2. 关键词匹配实现

#### 数据预处理
- 提取capability和your_experience中的关键词
- 词干化处理、停用词过滤
- 建立关键词索引表
- 支持中英文混合处理

#### 匹配算法
- **简单计数**：共同关键词数量
- **加权计数**：重要关键词权重更高（技术栈、业务领域词汇）
- **覆盖率**：匹配关键词占总关键词的比例
- **相似度计算**：综合上述因素的加权平均

#### 优化策略
- **专业术语词典**：技术栈、业务词汇、行业术语
- **同义词扩展**：React/ReactJS, PM/Product Manager等
- **模糊匹配**：处理拼写变体和缩写

### 3. 数据库设计考虑

#### 现有数据结构
- `capability_1` 到 `capability_5`：用户能力描述
- `your_experience_1` 到 `your_experience_5`：用户经历输入
- `generated_text_1` 到 `generated_text_5`：AI生成的正式简历文本

#### 扩展需求
- **关键词字段**：为每个experience和capability提取关键词
- **索引优化**：提高查询性能
- **元数据**：记录推荐使用频率、用户反馈等

### 4. 实现路线图

#### MVP阶段（第一期）
1. 实现基础的关键词提取功能
2. 完成阶段1的capability预推荐
3. 简单的推荐结果展示界面
4. 基础的点击插入功能

#### 完善阶段（第二期）
1. 加入阶段2的动态推荐
2. 实现阶段3的组合推荐算法
3. 优化匹配算法准确性
4. 改进用户交互体验

#### 高级阶段（第三期）
1. 机器学习优化推荐效果
2. 用户行为分析和个性化推荐
3. 跨用户的匿名化推荐（如果数据量足够）
4. 推荐解释和用户反馈机制

### 5. 技术实现细节

#### 前端实现
- 在Your Experience输入框附近添加推荐区域
- 实时搜索和推荐展示
- 一键插入、预览、编辑功能
- 推荐结果的相关度评分显示

#### 后端API
- `/api/jd2cv/recommend-experiences` - 获取推荐经历
- 支持capability-based和content-based两种推荐模式
- 返回推荐结果、相似度得分、关键词匹配信息

#### 性能优化
- 预计算常见关键词的相似度矩阵
- 缓存推荐结果（基于capability和输入内容hash）
- 分页加载历史数据
- 防抖处理用户输入

### 6. 成功指标

#### 用户体验指标
- 推荐接受率：用户点击使用推荐内容的比例
- 输入效率提升：完成experience输入的时间减少
- 用户满意度：推荐内容的相关性评分

#### 技术指标
- 推荐准确率：相关推荐占总推荐的比例
- 响应时间：推荐结果返回速度
- 系统稳定性：推荐服务的可用性

## 注意事项

1. **隐私保护**：确保用户数据不被泄露或误用
2. **数据质量**：需要定期清理和优化关键词提取效果
3. **扩展性**：系统设计需要支持未来更多推荐策略
4. **用户控制**：提供关闭推荐功能的选项
5. **渐进实施**：分阶段实现，持续优化用户体验

## 更新记录
- 2025-01-26: 初始方案设计
- 待更新: 实际实施过程中的调整和优化